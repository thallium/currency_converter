{"version":3,"sources":["currencyRow.js","App.js","index.js"],"names":["currencyRow","props","currencyOptions","selectedCurrency","onChange","onChangeAmount","amount","type","className","value","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrenctyOption","fromCurrency","setFromCurrency","toCurrency","setToCurrency","rate","setRate","setAmount","fromChanged","setFromChanged","useEffect","fetch","then","res","json","data","base","Object","keys","rates","firstCurrency","e","target","ReactDOM","render","document","getElementById"],"mappings":"6MAEe,SAASA,EAAYC,GAAQ,IAExCC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,iBACAC,EAGAH,EAHAG,SACAC,EAEAJ,EAFAI,eACAC,EACAL,EADAK,OAEF,OACE,6BACE,2BAAOC,KAAK,SAASC,UAAU,QAAQC,MAAOH,EAAQF,SAAUC,IAChE,4BAAQI,MAAON,EAAkBC,SAAUA,GACxCF,EAAgBQ,KAAI,SAAAC,GAAM,OACzB,4BAAQC,IAAKD,EAAQF,MAAOE,GAAUA,QCXhD,IAAME,EAAS,yCA6DAC,MA5Df,WAAgB,IAQVC,EAAUC,EARD,EAC+BC,mBAAS,IADxC,mBACNf,EADM,KACWgB,EADX,OAE0BD,mBAAS,IAFnC,mBAENE,EAFM,KAEOC,EAFP,OAGsBH,mBAAS,IAH/B,mBAGNI,EAHM,KAGKC,EAHL,OAISL,qBAJT,mBAINM,EAJM,KAIDC,EAJC,OAKcP,mBAAS,GALvB,mBAKNX,EALM,KAKCmB,EALD,OAMwBR,oBAAS,GANjC,mBAMNS,EANM,KAMMC,EANN,KAsCb,OA7BGD,EAEDX,GADAC,EAAWV,GACSiB,EAGpBP,GADAD,EAAST,GACWiB,EAEtBK,qBAAU,WACRC,MAAMhB,GAAUiB,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UAAQF,MAAK,SAAAG,GAC1Cf,EAAmB,CAACe,EAAKC,MAAP,mBAAeC,OAAOC,KAAKH,EAAKI,UAClDjB,EAAgBa,EAAKC,MACrB,IAAMI,EAAcH,OAAOC,KAAKH,EAAKI,OAAO,GAC5Cf,EAAcgB,GACdd,EAAQS,EAAKI,MAAMC,SAErB,IAEFV,qBAAU,WACRC,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAAcS,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UAAQF,MAAK,SAAAG,GAAI,OAC9FT,EAAQS,EAAKI,MAAMhB,SACrB,CAACF,EAAaE,IAUd,oCACE,2CACA,kBAAC,EAAD,CACElB,iBAAkBgB,EAClBjB,gBAAiBA,EACjBE,SAAU,SAAAmC,GAAC,OAAInB,EAAgBmB,EAAEC,OAAO/B,QACxCH,OAAQU,EACRX,eAhBN,SAA0BkC,GACxBd,EAAWc,EAAEC,OAAO/B,OACpBkB,GAAe,MAgBb,yBAAKnB,UAAU,SAAf,KACA,kBAAC,EAAD,CACEL,iBAAkBkB,EAClBnB,gBAAiBA,EACjBE,SAAU,SAAAmC,GAAC,OAAIjB,EAAciB,EAAEC,OAAO/B,QACtCH,OAAQS,EACRV,eApBN,SAAwBkC,GACtBd,EAAWc,EAAEC,OAAO/B,OACpBkB,GAAe,QCrCnBc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.96ccd310.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function currencyRow(props) {\n  const {\n    currencyOptions,\n    selectedCurrency,\n    onChange,\n    onChangeAmount,\n    amount\n  }=props;\n  return(\n    <div>\n      <input type=\"number\" className=\"input\" value={amount} onChange={onChangeAmount}/>\n      <select value={selectedCurrency} onChange={onChange}>\n        {currencyOptions.map(option=>(\n          <option key={option} value={option} >{option}</option>\n        ))}\n      </select>\n    </div>\n  ) ;\n}\n","import React,{useEffect, useState} from \"react\";\nimport \"./App.css\";\nimport CurrencyRow from \"./currencyRow\";\n\nconst BASE_URL=\"https://api.exchangeratesapi.io/latest\";\nfunction App() {\n  const [currencyOptions, setCurrenctyOption]=useState([]);\n  const [fromCurrency,setFromCurrency] = useState([]);\n  const [toCurrency,setToCurrency] = useState([]);\n  const [rate,setRate]= useState();\n  const [amount,setAmount] = useState(1);\n  const [fromChanged,setFromChanged] = useState(true);\n\n  let toAmount, fromAmount;\n  if(fromChanged){\n    fromAmount=amount;\n    toAmount=fromAmount*rate;\n  }else{\n    toAmount=amount;\n    fromAmount=toAmount/rate;\n  }\n  useEffect(()=>{\n    fetch(BASE_URL).then(res=> res.json()).then(data=> {\n      setCurrenctyOption([data.base,...Object.keys(data.rates)]);\n      setFromCurrency(data.base);\n      const firstCurrency=Object.keys(data.rates)[0];\n      setToCurrency(firstCurrency);\n      setRate(data.rates[firstCurrency]);\n    });\n  },[])\n\n  useEffect(()=>{\n    fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`).then(res=> res.json()).then(data=> \n      setRate(data.rates[toCurrency]))\n  },[fromCurrency,toCurrency]);\n  function handleFromChange(e){\n    setAmount (e.target.value);\n    setFromChanged(true);\n  }\n  function handleToChange(e){\n    setAmount (e.target.value);\n    setFromChanged(false);\n  }\n  return (\n    <>\n      <h1> Converter </h1> \n      <CurrencyRow \n        selectedCurrency={fromCurrency}\n        currencyOptions={currencyOptions}\n        onChange={e => setFromCurrency(e.target.value)}\n        amount={fromAmount}\n        onChangeAmount={handleFromChange}\n      />\n      <div className=\"equal\">=</div>\n      <CurrencyRow \n        selectedCurrency={toCurrency}\n        currencyOptions={currencyOptions}\n        onChange={e => setToCurrency(e.target.value)}\n        amount={toAmount}\n        onChangeAmount={handleToChange}\n      />\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}