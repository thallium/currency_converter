{"version":3,"sources":["currencyRow.js","App.js","index.js"],"names":["currencyRow","props","currencyOptions","selectedCurrency","onChange","onChangeAmount","amount","type","className","value","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrenctyOption","fromCurrency","setFromCurrency","toCurrency","setToCurrency","rate","setRate","setAmount","fromChanged","setFromChanged","useEffect","fetch","then","res","json","data","base","Object","keys","rates","e","target","ReactDOM","render","document","getElementById"],"mappings":"6MAEe,SAASA,EAAYC,GAAQ,IAExCC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,iBACAC,EAGAH,EAHAG,SACAC,EAEAJ,EAFAI,eACAC,EACAL,EADAK,OAEF,OACE,6BACE,2BAAOC,KAAK,SAASC,UAAU,QAAQC,MAAOH,EAAQF,SAAUC,IAChE,4BAAQI,MAAON,EAAkBC,SAAUA,GACxCF,EAAgBQ,KAAI,SAAAC,GAAM,OACzB,4BAAQC,IAAKD,EAAQF,MAAOE,GAAUA,QCXhD,IAAME,EAAW,yCAiEFC,MAhEf,WAAgB,IAQVC,EAAUC,EARD,EACiCC,mBAAS,IAD1C,mBACNf,EADM,KACWgB,EADX,OAE2BD,mBAAS,IAFpC,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,mBAAS,IAHhC,mBAGNI,EAHM,KAGMC,EAHN,OAIWL,qBAJX,mBAINM,EAJM,KAIAC,EAJA,OAKeP,mBAAS,GALxB,mBAKNX,EALM,KAKEmB,EALF,OAMyBR,oBAAS,GANlC,mBAMNS,EANM,KAMOC,EANP,KA0Cb,OAjCID,EAEFX,GADAC,EAAaV,GACWiB,EAGxBP,GADAD,EAAWT,GACaiB,EAE1BK,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJf,EAAmB,CAACe,EAAKC,MAAP,mBAAgBC,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgB,OAChBE,EAAc,OACdO,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/CS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAQS,EAAKI,MAAMhB,YAEtC,IAEHO,qBAAU,WACRC,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/CS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAQS,EAAKI,MAAMhB,SAClC,CAACF,EAAcE,IAUhB,oCACE,2CACA,kBAAC,EAAD,CACElB,iBAAkBgB,EAClBjB,gBAAiBA,EACjBE,SAAU,SAAAkC,GAAC,OAAIlB,EAAgBkB,EAAEC,OAAO9B,QACxCH,OAAQU,EACRX,eAhBN,SAA0BiC,GACxBb,EAAUa,EAAEC,OAAO9B,OACnBkB,GAAe,MAgBb,yBAAKnB,UAAU,SAAf,KACA,kBAAC,EAAD,CACEL,iBAAkBkB,EAClBnB,gBAAiBA,EACjBE,SAAU,SAAAkC,GAAC,OAAIhB,EAAcgB,EAAEC,OAAO9B,QACtCH,OAAQS,EACRV,eApBN,SAAwBiC,GACtBb,EAAUa,EAAEC,OAAO9B,OACnBkB,GAAe,QCzCnBa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2e0b417f.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function currencyRow(props) {\n  const {\n    currencyOptions,\n    selectedCurrency,\n    onChange,\n    onChangeAmount,\n    amount\n  }=props;\n  return(\n    <div>\n      <input type=\"number\" className=\"input\" value={amount} onChange={onChangeAmount}/>\n      <select value={selectedCurrency} onChange={onChange}>\n        {currencyOptions.map(option=>(\n          <option key={option} value={option} >{option}</option>\n        ))}\n      </select>\n    </div>\n  ) ;\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CurrencyRow from \"./currencyRow\";\n\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\nfunction App() {\n  const [currencyOptions, setCurrenctyOption] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState([]);\n  const [toCurrency, setToCurrency] = useState([]);\n  const [rate, setRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [fromChanged, setFromChanged] = useState(true);\n\n  let toAmount, fromAmount;\n  if (fromChanged) {\n    fromAmount = amount;\n    toAmount = fromAmount * rate;\n  } else {\n    toAmount = amount;\n    fromAmount = toAmount / rate;\n  }\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        setCurrenctyOption([data.base, ...Object.keys(data.rates)]);\n        setFromCurrency(\"CAD\");\n        setToCurrency(\"CNY\");\n        fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n          .then(res => res.json())\n          .then(data => setRate(data.rates[toCurrency]));\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n      .then(res => res.json())\n      .then(data => setRate(data.rates[toCurrency]));\n  }, [fromCurrency, toCurrency]);\n  function handleFromChange(e) {\n    setAmount(e.target.value);\n    setFromChanged(true);\n  }\n  function handleToChange(e) {\n    setAmount(e.target.value);\n    setFromChanged(false);\n  }\n  return (\n    <>\n      <h1> Converter </h1>\n      <CurrencyRow\n        selectedCurrency={fromCurrency}\n        currencyOptions={currencyOptions}\n        onChange={e => setFromCurrency(e.target.value)}\n        amount={fromAmount}\n        onChangeAmount={handleFromChange}\n      />\n      <div className=\"equal\">=</div>\n      <CurrencyRow\n        selectedCurrency={toCurrency}\n        currencyOptions={currencyOptions}\n        onChange={e => setToCurrency(e.target.value)}\n        amount={toAmount}\n        onChangeAmount={handleToChange}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}